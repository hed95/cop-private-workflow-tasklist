workspace:
  base: /build
  path: src/github.com/ukhomeoffice/cop-private-workflow-tasklist

pipeline:
  test:
    image: node:10
    commands:
    - npm ci
    - npm run test:coverage
    when:
      event: push

  synch_dev_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=dev
    secrets:
      - source: DEV_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: DEV_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

  synch_staging_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=staging
    secrets:
      - source: STAGING_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: STAGING_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

  synch_production_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=production
    secrets:
      - source: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

  build:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t cop-private-workflow-tasklist:$${DRONE_COMMIT_SHA} .
    when:
      branch: master
      event: push

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
    - source: QUAY_USERNAME
      target: DOCKER_USERNAME
    - source: QUAY_PASSWORD
      target: DOCKER_PASSWORD
    - source: DEV_WWW_STORAGE_KEY
      target: DEV_WWW_STORAGE_KEY
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-private-workflow-tasklist
    build_args:
      - WWW_STORAGE_KEY=$${WWW_DEV_STORAGE_KEY}
    tags: ${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  deploy_to_dev:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: DEV_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: DEV_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
      - source: DEV_KUBE_SERVER
        target: KUBE_SERVER
      - source: DEV_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: DEV_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: DEV_WHITELIST
        target: WHITELIST
      - source: WWW_NAME
        target: WWW_NAME
      - source: DEV_WWW_URL
        target: WWW_URL
      - source: PROTOCOL_HTTPS
        target: WWW_PROTOCOL
      - source: WWW_PORT
        target: WWW_PORT
      - source: DEV_WWW_UI_ENVIRONMENT
        target: WWW_UI_ENVIRONMENT
      - source: WWW_UI_VERSION
        target: WWW_UI_VERSION
      - source: WWW_KEYCLOAK_CLIENT_ID
        target: WWW_KEYCLOAK_CLIENT_ID
      - source: WWW_KEYCLOAK_ACCESS_ROLE
        target: WWW_KEYCLOAK_ACCESS_ROLE
      - source: DEV_WWW_STORAGE_KEY
        target: WWW_STORAGE_KEY
      - source: WWW_IMAGE
        target: WWW_IMAGE
      - source: DEV_REPORT_URL
        target: REPORT_URL
      - source: PROTOCOL_HTTPS
        target: REPORT_PROTOCOL
      - source: DEV_API_REF_URL
        target: API_REF_URL
      - source: PROTOCOL_HTTPS
        target: API_REF_PROTOCOL
      - source: DEV_API_COP_URL
        target: API_COP_URL
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: DEV_ENGINE_URL
        target: ENGINE_URL
      - source: PROTOCOL_HTTPS
        target: ENGINE_PROTOCOL
      - source: DEV_API_FORM_URL
        target: API_FORM_URL
      - source: PROTOCOL_HTTPS
        target: API_FORM_PROTOCOL
      - source: DEV_API_ATTACHMENT_URL
        target: API_ATTACHMENT_URL
      - source: PROTOCOL_HTTPS
        target: API_ATTACHMENT_PROTOCOL
      - source: DEV_ANALYTICS_URL
        target: ANALYTICS_URL
      - source: DEV_ANALYTICS_SITE_ID
        target: ANALYTICS_SITE_ID
      - source: DEV_WWW_BROWSER_VERSIONS
        target: BROWSER_VERSIONS
      - source: DEV_WWW_DETECT_BROWSER
        target: DETECT_BROWSER
      - source: DEV_WWW_PRODUCT_PAGE_URI
        target: PRODUCT_PAGE_URI
    commands:
      - export WWW_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      branch: master
      event: push

  create-change-desc-dev:
    image: docker:git
    commands:
      - git show --name-only >> $SNOW_DESC_FILE
    when:
      branch: master
      event: push

  open-snow-change-dev:
    image: quay.io/ukhomeofficedigital/snowtify:latest
    secrets:
      - source: DEV_SERVICE_NOW_PASSWORD
        target: SNOW_TEST_PASS
      - source: DEV_SERVICE_NOW_URL
        target: SNOW_ENDPOINT
      - source: DEV_SERVICE_NOW_USERNAME
        target: SNOW_TEST_USER
    environment:
      - SNOW_EXTERNAL_ID=${DRONE_REPO}:${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  complete-snow-change-dev:
    image: quay.io/ukhomeofficedigital/snowtify:latest
    secrets:
      - source: DEV_SERVICE_NOW_PASSWORD
        target: SNOW_TEST_PASS
      - source: DEV_SERVICE_NOW_URL
        target: SNOW_ENDPOINT
      - source: DEV_SERVICE_NOW_USERNAME
        target: SNOW_TEST_USER
    comments: Successful deployment of ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    deployment_outcome: success
    when:
      branch: master
      event: push
      status: success

  cancel-snow-change-dev:
    image: quay.io/ukhomeofficedigital/snowtify:latest
    secrets:
      - source: DEV_SERVICE_NOW_PASSWORD
        target: SNOW_TEST_PASS
      - source: DEV_SERVICE_NOW_URL
        target: SNOW_ENDPOINT
      - source: DEV_SERVICE_NOW_USERNAME
        target: SNOW_TEST_USER
    comments: Failed deployment of ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    deployment_outcome: fail
    when:
      branch: master
      event: push
      status: failure

  vulnerability-scan:
    image: quay.io/ukhomeofficedigital/anchore-submission:latest
    dockerfile: Dockerfile
    image_name: cop-private-workflow-tasklist:${DRONE_COMMIT_SHA}
    local_image: true
    tolerate: low
    fail_on_detection: false
    when:
      branch: master
      event: push

  deploy_to_staging:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: STAGING_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: STAGING_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
      - source: STAGING_KUBE_SERVER
        target: KUBE_SERVER
      - source: STAGING_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: STAGING_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: STAGING_WHITELIST
        target: WHITELIST
      - source: WWW_NAME
        target: WWW_NAME
      - source: STAGING_WWW_URL
        target: WWW_URL
      - source: PROTOCOL_HTTPS
        target: WWW_PROTOCOL
      - source: WWW_PORT
        target: WWW_PORT
      - source: STAGING_WWW_UI_ENVIRONMENT
        target: WWW_UI_ENVIRONMENT
      - source: WWW_UI_VERSION
        target: WWW_UI_VERSION
      - source: WWW_KEYCLOAK_CLIENT_ID
        target: WWW_KEYCLOAK_CLIENT_ID
      - source: WWW_KEYCLOAK_ACCESS_ROLE
        target: WWW_KEYCLOAK_ACCESS_ROLE
      - source: STAGING_WWW_STORAGE_KEY
        target: WWW_STORAGE_KEY
      - source: WWW_IMAGE
        target: WWW_IMAGE
      - source: STAGING_REPORT_URL
        target: REPORT_URL
      - source: PROTOCOL_HTTPS
        target: REPORT_PROTOCOL
      - source: STAGING_API_REF_URL
        target: API_REF_URL
      - source: PROTOCOL_HTTPS
        target: API_REF_PROTOCOL
      - source: STAGING_API_COP_URL
        target: API_COP_URL
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: STAGING_ENGINE_URL
        target: ENGINE_URL
      - source: PROTOCOL_HTTPS
        target: ENGINE_PROTOCOL
      - source: STAGING_API_FORM_URL
        target: API_FORM_URL
      - source: PROTOCOL_HTTPS
        target: API_FORM_PROTOCOL
      - source: STAGING_API_ATTACHMENT_URL
        target: API_ATTACHMENT_URL
      - source: PROTOCOL_HTTPS
        target: API_ATTACHMENT_PROTOCOL
      - source: STAGING_ANALYTICS_URL
        target: ANALYTICS_URL
      - source: STAGING_ANALYTICS_SITE_ID
        target: ANALYTICS_SITE_ID
      - source: STAGING_WWW_BROWSER_VERSIONS
        target: BROWSER_VERSIONS
      - source: STAGING_WWW_DETECT_BROWSER
        target: DETECT_BROWSER
      - source: STAGING_WWW_PRODUCT_PAGE_URI
        target: PRODUCT_PAGE_URI
    commands:
      - export WWW_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      environment: staging
      event: deployment

  deploy_to_production:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: PRODUCTION_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: PRODUCTION_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
      - source: PRODUCTION_KUBE_SERVER
        target: KUBE_SERVER
      - source: PRODUCTION_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: PRODUCTION_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: PRODUCTION_WHITELIST
        target: WHITELIST
      - source: WWW_NAME
        target: WWW_NAME
      - source: PRODUCTION_WWW_URL
        target: WWW_URL
      - source: PROTOCOL_HTTPS
        target: WWW_PROTOCOL
      - source: WWW_PORT
        target: WWW_PORT
      - source: PRODUCTION_WWW_UI_ENVIRONMENT
        target: WWW_UI_ENVIRONMENT
      - source: WWW_UI_VERSION
        target: WWW_UI_VERSION
      - source: WWW_KEYCLOAK_CLIENT_ID
        target: WWW_KEYCLOAK_CLIENT_ID
      - source: WWW_KEYCLOAK_ACCESS_ROLE
        target: WWW_KEYCLOAK_ACCESS_ROLE
      - source: PRODUCTION_WWW_STORAGE_KEY
        target: WWW_STORAGE_KEY
      - source: WWW_IMAGE
        target: WWW_IMAGE
      - source: PRODUCTION_REPORT_URL
        target: REPORT_URL
      - source: PROTOCOL_HTTPS
        target: REPORT_PROTOCOL
      - source: PRODUCTION_API_REF_URL
        target: API_REF_URL
      - source: PROTOCOL_HTTPS
        target: API_REF_PROTOCOL
      - source: PRODUCTION_API_COP_URL
        target: API_COP_URL
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: PRODUCTION_ENGINE_URL
        target: ENGINE_URL
      - source: PROTOCOL_HTTPS
        target: ENGINE_PROTOCOL
      - source: PRODUCTION_API_FORM_URL
        target: API_FORM_URL
      - source: PROTOCOL_HTTPS
        target: API_FORM_PROTOCOL
      - source: PRODUCTION_API_ATTACHMENT_URL
        target: API_ATTACHMENT_URL
      - source: PROTOCOL_HTTPS
        target: API_ATTACHMENT_PROTOCOL
      - source: PRODUCTION_ANALYTICS_URL
        target: ANALYTICS_URL
      - source: PRODUCTION_ANALYTICS_SITE_ID
        target: ANALYTICS_SITE_ID
      - source: PRODUCTION_WWW_BROWSER_VERSIONS
        target: BROWSER_VERSIONS
      - source: PRODUCTION_WWW_DETECT_BROWSER
        target: DETECT_BROWSER
      - source: PRODUCTION_WWW_PRODUCT_PAGE_URI
        target: PRODUCT_PAGE_URI
    commands:
      - export WWW_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      environment: production
      event: deployment

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
        {{build.link}}
      {{else}}
        *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*
        {{build.link}}
      {{/build.deployTo}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]

matrix:                 # setup some common env vars
  SNOW_DESC_FILE:
    - /build/change-desc.txt
  SNOW_INT_ID_FILE:
    - /build/internal-id
